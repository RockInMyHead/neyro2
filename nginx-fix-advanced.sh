#!/bin/bash

# –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ nginx –¥–ª—è TimeWeb
# –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–æ–º –∏ –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–º–∏

echo "üîß –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ nginx –¥–ª—è TimeWeb..."
echo "üìç –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ nginx
find_nginx_configs() {
    echo "üîç –ò—â–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã nginx..."

    # –ò—â–µ–º –≤ sites-enabled
    if [ -d "/etc/nginx/sites-enabled" ]; then
        for file in /etc/nginx/sites-enabled/*; do
            if [ -f "$file" ] && [ -L "$file" ]; then
                echo "üîó –ù–∞–π–¥–µ–Ω symlink: $file -> $(readlink $file)"
            elif [ -f "$file" ]; then
                echo "üìÑ –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª: $file"
            fi
        done
    fi

    # –ò—â–µ–º –≤ sites-available
    if [ -d "/etc/nginx/sites-available" ]; then
        for file in /etc/nginx/sites-available/*; do
            if [ -f "$file" ]; then
                echo "üìÑ –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª: $file"
            fi
        done
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
fix_config_file() {
    local config_file="$1"
    local backup_file="${config_file}.backup.$(date +%Y%m%d_%H%M%S)"

    echo "üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º: $config_file"

    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    sudo cp "$config_file" "$backup_file"
    echo "üì¶ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: $backup_file"

    # –°–æ–∑–¥–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    sudo tee "$config_file" > /dev/null << 'EOF'
server {
    listen 80;
    server_name 194.87.226.56;
    root /var/www/timeweb-deploy/public;
    index index.html;

    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    access_log /var/log/nginx/timeweb-deploy_access.log;
    error_log /var/log/nginx/timeweb-deploy_error.log;

    # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã - –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    location /images/ {
        alias /var/www/timeweb-deploy/images/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã - –º—É–∑—ã–∫–∞
    location /music/ {
        alias /var/www/timeweb-deploy/music/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Content-Type "audio/mpeg";
    }

    # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ—Å—É—Ä—Å—ã (CSS, JS, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|mp3|wav)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã - –æ–±—Ä–∞–±–æ—Ç–∫–∞ preflight OPTIONS –∑–∞–ø—Ä–æ—Å–æ–≤
    location ~ ^/(generate_dalle|session|enhance_prompt|debug_openai)$ {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Content-Type $http_content_type;

        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
    }

    # WebSocket –ø–æ–¥–¥–µ—Ä–∂–∫–∞
    location /ws {
        proxy_pass http://127.0.0.1:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # SPA fallback –¥–ª—è React Router
    location / {
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }
}
EOF

    echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
create_minimal_config() {
    local config_file="/etc/nginx/sites-available/default"
    local backup_file="${config_file}.backup.$(date +%Y%m%d_%H%M%S)"

    echo "üîß –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."

    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    sudo cp "$config_file" "$backup_file" 2>/dev/null || echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é"

    # –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    sudo tee "$config_file" > /dev/null << 'EOF'
server {
    listen 80;
    server_name 194.87.226.56;
    root /var/www/timeweb-deploy/public;
    index index.html;

    location / {
        try_files $uri $uri/ /index.html;
    }

    location /images/ {
        alias /var/www/timeweb-deploy/images/;
    }

    location /music/ {
        alias /var/www/timeweb-deploy/music/;
        add_header Content-Type "audio/mpeg";
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|mp3|wav)$ {
        try_files $uri =404;
    }

    location ~ ^/(generate_dalle|session|enhance_prompt|debug_openai)$ {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
    }

    location /ws {
        proxy_pass http://127.0.0.1:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
EOF

    echo "‚úÖ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    echo "üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–∫—É—â—É—é —Å–∏—Ç—É–∞—Ü–∏—é..."

    # –®–∞–≥ 1: –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    echo "üìã –®–∞–≥ 1: –ü–æ–∏—Å–∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"
    find_nginx_configs

    # –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º backend
    echo "üìã –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º backend —Å–µ—Ä–≤–µ—Ä"
    if curl -s http://127.0.0.1:8000/docs > /dev/null; then
        echo "‚úÖ Backend —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        echo "‚ùå Backend —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
        echo "üîß –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å—Ç–∏—Ç—å backend..."
        nohup python app.py > backend.log 2>&1 &
        sleep 3
        if curl -s http://127.0.0.1:8000/docs > /dev/null; then
            echo "‚úÖ Backend —Å–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω"
        else
            echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å backend"
            exit 1
        fi
    fi

    # –®–∞–≥ 3: –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    echo "üìã –®–∞–≥ 3: –ò—Å–ø—Ä–∞–≤–ª—è–µ–º nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if [ -f "/etc/nginx/sites-enabled/neyro" ]; then
        echo "üîß –ù–∞–π–¥–µ–Ω–∞ –∫–∞—Å—Ç–æ–º–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: neyro"
        fix_config_file "/etc/nginx/sites-enabled/neyro"
    elif [ -f "/etc/nginx/sites-available/neyro" ]; then
        echo "üîß –ù–∞–π–¥–µ–Ω–∞ –∫–∞—Å—Ç–æ–º–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: neyro"
        fix_config_file "/etc/nginx/sites-available/neyro"
    else
        echo "üîß –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
        create_minimal_config
    fi

    # –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å
    echo "üìã –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å nginx"
    if sudo nginx -t; then
        echo "‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –≤ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–µ"
        echo "üîß –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
        create_minimal_config

        if sudo nginx -t; then
            echo "‚úÖ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç"
        else
            echo "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
            echo "üîß –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
            sudo cp /etc/nginx/sites-available/default.backup.* /etc/nginx/sites-available/default 2>/dev/null
            exit 1
        fi
    fi

    # –®–∞–≥ 5: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º nginx
    echo "üìã –®–∞–≥ 5: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º nginx"
    if sudo systemctl reload nginx; then
        echo "‚úÖ Nginx —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ nginx"
        exit 1
    fi

    # –®–∞–≥ 6: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    echo "üìã –®–∞–≥ 6: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
    sleep 3

    echo "üîç –ü—Ä–æ–≤–µ—Ä—è—é /music/2.mp3..."
    if curl -I http://194.87.226.56/music/2.mp3 2>/dev/null | grep -q "200 OK"; then
        echo "‚úÖ –ú—É–∑—ã–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        echo "‚ùå –ú—É–∑—ã–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi

    echo "üîç –ü—Ä–æ–≤–µ—Ä—è—é /generate_dalle..."
    RESPONSE=$(curl -I http://194.87.226.56/generate_dalle 2>/dev/null | head -1)
    if echo "$RESPONSE" | grep -q "200 OK"; then
        echo "‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç"
    elif echo "$RESPONSE" | grep -q "405"; then
        echo "‚ö†Ô∏è  API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 405 (–Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è HEAD)"
    elif echo "$RESPONSE" | grep -q "502"; then
        echo "‚ùå API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 502 - –ø—Ä–æ–±–ª–µ–º–∞ —Å backend"
    else
        echo "‚ùå API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç: $RESPONSE"
    fi

    echo ""
    echo "üéâ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    echo "üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à —Å–∞–π—Ç: http://194.87.226.56"
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"